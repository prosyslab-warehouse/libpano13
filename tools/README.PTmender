PTmender
--------

This is a rewrite of PTStitcher. It is currently only stitching TIFF_m
panoramas, but the goal is to create a replacement of the original
PTStitcher for which the source code was never released.

I am currently working on the the implementation of colour brightness
adjustment.


----------------------------------------------------------------------
HOW TO HELP.

* Code reviewers.
 
  if you are familiar with libpano, it will help to check that the
  source code is "sound" (which means that it "looks" good). Until we
  implement the minimum necessary to run it, we can't test it. We will
  rely in code reviews.

* Create test cases.  We need to create some test cases that we can
   use to verify if PTmender works _exactly_ as PTStitcher. This will
   require some panorama scripts and the images, and some scripts to
   verify the results.

* Blackbox analysis. Jim has created a DLL that tracks the function
  calls from a program to libpano. It will be interesting to script
  the test cases and make sure that the function calls are identical
  (and the parameters passed too!). This will be very useful during
  the recreation of the program.

* If you know 0x86 assembly (or want to learn) contact me at dmgerman
  at uvic ca.



----------------------------------------------------------------------

TODO:

   * Debug Colour Correction code. This part is work in progress.

   * Recreate the following functions:

    int CreatePSD(  fullPath *fullPathImages, int numberImages, fullPath* fullPathImage)
    int CreateStitchingMasks(fullPath *fullPathImages, int numberImages)
    int Create_LP_ivr(Image *image, fullPath* fullPathImage)
    int FlattenTIFF(  fullPath *fullPathImages, int numberImages)
    int Unknown01(Image *image, fullPath* fullPathImage)
    int Unknown02(Image *image, fullPath* fullPathImage)
    int Unknown03(Image *image, fullPath* fullPathImage)
    int Unknown04(Image *image, fullPath* fullPathImage)
    int Unknown05(Image *image, fullPath* fullPathImage)
    int Unknown07(Image *image, fullPath* fullPathImage)
    void Unknown08(Image *resultPanorama)
    void Unknown09(Image *currentImagePtr)
    void Unknown28(  fullPath *fullPathImages, int p1, int p2, int p3)

----------------------------------------------------------------------

COMMAND LINE OPTIONS

-s     Sort image files. I assume that the processing of the files
       (by default) is in the command line order. This overrides it.

-q     Quiet execution. Do not display progress messages during
       execution.

-o     Specify the name of the result panorama file.

-f     Specify the name of the script file.

The program assumes that the last file specified in the command line
with a .txt extension is the script (even if the -f option is
specified). This means that if the script has no .txt extension it is
treated as an image (in that case use -f option).

If a command line argument is a directory, any files in it are
processed (non-recursively) as if they were all specified in the
command line.

Any other command line argument that is a file is treated as an image.


If the command line does not have any image in it, then the script is
processed and any references to images in it are processed.

If the command line does not have a script file, then the user is
asked for it.

----------------------------------------------------------------------

